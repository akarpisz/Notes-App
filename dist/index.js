const express=require("express"),path=require("path"),fs=require("fs"),app=express(),PORT=process.env.PORT||5e3;global.appRoot=path.resolve(__dirname);class Note{constructor(a,b,c){this.id=a,this.title=b,this.text=c}}app.use(express.urlencoded({extended:!0})),app.use(express.json()),app.use(express.static("public")),app.get("/",function(a,b){b.sendFile(path.join(appRoot+"/public/","index.html"))}),app.get("/notes",function(a,b){b.sendFile(path.join(appRoot+"/public/","notes.html"))}),app.get("/api/notes",function(a,b){let c=fs.readFileSync("./db/db.json","utf-8",function(a,b){if(a)throw a;return b});return b.json(JSON.parse(c))}),app.post("/api/notes",function(a,b){var c=fs.readFileSync("./db/db.json","utf-8",function(a,b){if(a)throw a;return b});let d=JSON.parse(c).length+1,e=JSON.parse(c),f=new Note(d,a.body.title,a.body.text);e.push(f),fs.writeFileSync("./db/db.json",JSON.stringify(e),a=>{throw a}),b.sendFile(path.join(appRoot+"/public/","notes.html"))}),app.delete("/api/notes/:id",async function(a,b){let c=parseInt(a.params.id),d=fs.readFileSync("./db/db.json","utf-8",a=>a),e=JSON.parse(d),f=e.length,g=e.filter(a=>a.id!==c);fs.writeFileSync("./db/db.json",JSON.stringify(g),a=>a),b.sendFile(path.join(appRoot+"/public/","notes.html"))}),app.listen(PORT,function(){console.log(`listening on Port: ${PORT}`)});